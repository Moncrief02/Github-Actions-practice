name: Build Website
on:
  push:
    branches:
      - main
      - Dev
env:
  MONGODB_DB_NAME: gha-Demo
jobs:
  test:
    env:
      MONGODB_DB_CLUSTER_ADDRESS:
      MONGODB_DB_USERNAME:
      MONGODB_DB_PASSWORD:
      PORT:
    runs-on: Ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout @v3
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-nod-modules-${{ hashFiles( ' **/package-lock.json')}}
      - name: Install Dependencies
        uses: run npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        continue-on-error: true
        id: run-tests
        run: npm tests
        if: steps.run-tests.outcome == 'failure '
      - name: Output Information
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME}}"
          echo "MONGODB_DB_NAME: $MONGODB_NAME"
    build:
      needs: test
      runs-on: Ubuntu-latest
      outputs:
        script-files: ${{ steps.publish.outputs.script-file}}
      steps:
        - name: Get code
          uses: actions/checkout@v3
        - name: Cache Dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: deps-nod-modules-${{ hashFiles( ' **/package-lock.json')}}
        - name: Install Dependencies
          run: npm ci
        - name: Build Website
          run: run npm build
        - name: Publish JS filename
          id: publish
            run: find dist/assets/*.js -type f -exec dir echo '::set-output name=script-file::{}'>> $GITHUB_OUTPUT ';'
        - name: Upload Artifact
          - uses: actions/upload-artifact@v3
            with:
              name: dist-files
              path: |
                dist
                package.json
    deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Get Build Artifact
          uses: actions/download-artifact@v3
            with:
               name: dist-files
        - name: Output Contents
          run: ls
        - name: Output filename
          run: echo "${{ needs.build.outputs.script-file }}"
        - name: Deploy
            run: echo "Deploying ..."
